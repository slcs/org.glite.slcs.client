<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Copyright (c) Members of the EGEE Collaboration. 2007.
    See http://www.eu-egee.org/partners/ for details on the copyright
    holders.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    ETICS build for org.glite.slcs.ui

    Author: Valery Tschopp <tschopp@switch.ch>
    Version: $Id: build.xml,v 1.11 2007/09/26 10:24:51 vtschopp Exp $
-->
<project name="org.glite.slcs.ui" default="local-dist" basedir=".">

    <!-- workspace directories -->
    <property name="workspace.dir" location=".." />
    <property name="stage.dir" location="${workspace.dir}/stage" />
    <property name="stage.lib.dir" location="${stage.dir}/share/java" />

    <!-- ETICS externals defs -->
    <import file="project/etics-externals.xml" />

    <!-- local properties -->
    <property file="build.properties" />

    <!-- module directories -->
    <property name="src.dir" location="${basedir}/src" />
    <property name="test.src.dir" location="${basedir}/test" />
    <property name="bin.dir" location="${basedir}/scripts" />
    <property name="etc.dir" location="${basedir}/etc" />
    <property name="doc.dir" location="${basedir}/doc" />
    
    <!-- build dirs -->
    <property name="build.dir" location="${basedir}/build" />
    <property name="classes.dir" location="${build.dir}/classes" />
    <property name="test.classes.dir" location="${build.dir}/test/classes" />
    
    <!-- install dirs -->
    <property name="install.dir" location="${build.dir}/glite" />
    
    <!-- init -->
    <target name="init" depends="">
        <tstamp />
        <!-- classpath with libraries from ETICS repository -->
        <path id="compile.path">
            <pathelement path="${classes.dir}"/>
            <pathelement location="${stage.lib.dir}/glite-slcs-common.jar"/>
            <path refid="ext.bouncycastle.bcprov.path"/>
            <path refid="ext.commons-cli.path"/>
            <path refid="ext.commons-codec.path"/>
            <path refid="ext.commons-collections.path"/>
            <path refid="ext.commons-configuration.path"/>
            <path refid="ext.commons-httpclient.path"/>
            <path refid="ext.commons-lang.path"/>
            <path refid="ext.commons-logging.path"/>
            <path refid="ext.jericho-html.path"/>
            <path refid="ext.log4j.path"/>
        </path>
        <path id="test.path">
            <path refid="compile.path"/>
            <pathelement path="${test.classes.dir}"/>
            <path refid="ext.junit.path"/>
        </path>
    </target>

    <!-- prepare -->
    <target name="prepare" depends="init">
        <mkdir dir="${classes.dir}" />
        <mkdir dir="${test.classes.dir}" />
    </target>

    <!-- compile -->
    <target name="compile" depends="prepare">
        <echo message="compile..."/>
        <!-- Compile the java code from ${src} into ${build} -->
        <javac srcdir="${src.dir}" debug="true" destdir="${classes.dir}">
            <classpath refid="compile.path" />
        </javac>
    </target>

    <!-- test.compile -->
    <target name="test.compile" depends="compile">
        <echo message="test.compile..."/>
        <!-- Compile the java code from ${src} into ${build} -->
        <javac srcdir="${test.src.dir}" debug="true" destdir="${test.classes.dir}">
            <classpath refid="test.path" />
        </javac>
    </target>

    <!-- test -->
    <target name="test" depends="test.compile">
        <echo message="test..."/>
        <!-- TODO: use junit... -->
    </target>

    <!-- jar -->
    <target name="jar" depends="compile">
        <!-- jar org.glite.slcs.ui classes -->
        <jar jarfile="${build.dir}/${package.name}.jar" basedir="${classes.dir}" />
    </target>
    
    <!-- prepare installation layout in ${install.dir} -->
    <target name="install-layout" depends="jar">
        <echo message="prepare install in ${install.dir}"/>
        <property name="install.bin.dir" location="${install.dir}/bin"/>
        <property name="install.etc.dir" location="${install.dir}/etc/${package.name}"/>
        <property name="install.doc.dir" location="${install.dir}/share/doc/${package.name}"/>
        <property name="install.log.dir" location="${install.dir}/log"/>
        <property name="install.lib.dir" location="${install.dir}/share/java"/>

        <!-- first clean up -->
        <delete dir="${install.dir}"/>

        <!-- create install dir -->
        <mkdir dir="${install.bin.dir}"/>
        <mkdir dir="${install.etc.dir}"/>
        <mkdir dir="${install.doc.dir}"/>
        <mkdir dir="${install.log.dir}"/>
        <mkdir dir="${install.lib.dir}"/>
        <!-- bin scripts -->
        <copy todir="${install.bin.dir}">
            <fileset dir="${bin.dir}">
                <include name="slcs-*" />
            </fileset>
        </copy>
        <chmod dir="${install.bin.dir}" perm="755">
            <include name="slcs-*" />
        </chmod>
        <!-- etc config and keystore -->
        <copy todir="${install.etc.dir}">
            <fileset dir="${etc.dir}">
                <include name="*.xml" />
                <include name="*.jks" />
            </fileset>
        </copy>
        <!-- doc -->
        <copy todir="${install.doc.dir}">
            <fileset dir="${doc.dir}" />
        </copy>
        <!-- empty log file -->
        <touch file="${install.log.dir}/slcs-init.log" />
        <!-- application jar -->
        <copy todir="${install.lib.dir}" file="${build.dir}/${package.name}.jar"/>
        
   </target>
   
   <!-- install used by ETICS packager: ant -Dprefix=${prefix} install -->
   <target name="install" depends="install-layout">
        <!-- copy everything in $prefix -->
        <echo message="install in ${prefix}"/>
        <copy todir="${prefix}">
            <fileset dir="${install.dir}"/>
        </copy>
        <!-- fix permission ?!? -->
        <chmod dir="${prefix}/bin" perm="755">
            <include name="slcs-*" />
        </chmod>
    </target>

    <!-- package standalone lib with full dependencies -->
    <target name="full-package" depends="install-layout">
        <echo message="package..."/>
        <!-- install directory -->        
        <property name="install.lib.dir" location="${install.dir}/share/java" />
        <!-- copy glite-slcs-common lib -->
        <property name="slcs.common.jar" location="${stage.lib.dir}/glite-slcs-common.jar" />
        <available property="slcs.common.jar.exists" file="${slcs.common.jar}"/>
        <fail unless="slcs.common.jar.exists" message="${slcs.common.jar} is missing. please build org.glite.slcs.common first..."/>
        <copy todir="${install.lib.dir}" file="${slcs.common.jar}"/>
        <!-- copy all others third party libs in externals/share/java -->
        <property name="install.externals.dir" location="${install.dir}/externals/share/java" />
        <mkdir dir="${install.externals.dir}" />
        <copy todir="${install.externals.dir}" flatten="true">
            <fileset refid="ext.bouncycastle.bcprov.fileset"/>
            <fileset refid="ext.commons-cli.fileset"/>
            <fileset refid="ext.commons-codec.fileset"/>
            <fileset refid="ext.commons-collections.fileset"/>
            <fileset refid="ext.commons-configuration.fileset"/>
            <fileset refid="ext.commons-httpclient.fileset"/>
            <fileset refid="ext.commons-lang.fileset"/>
            <fileset refid="ext.commons-logging.fileset"/>
            <fileset refid="ext.jericho-html.fileset"/>
            <fileset refid="ext.log4j.fileset"/>
        </copy>
    </target>
    
    <!-- create standalone tar.gz distribution  -->
    <target name="local-dist" depends="clean,full-package">
        <property name="dist.file"
            value="${package.name}-${package.version}-jdk${ant.java.version}-${DSTAMP}.tar.gz" />
        <tar destfile="${dist.file}" compression="gzip">
            <tarfileset dir="${install.dir}" mode="755" username="root" group="root">
                <include name="bin/slcs-*" />
            </tarfileset>
            <tarfileset dir="${install.dir}" mode="666" username="root" group="root">
                <include name="log/slcs-init.log" />
            </tarfileset>
            <tarfileset dir="${install.dir}" username="root" group="root">
                <exclude name="bin/slcs-*" />
                <exclude name="log/slcs-init.log" />
            </tarfileset>
        </tar>
    </target>
    
    <!-- clean -->
    <target name="clean">
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build.dir}" failonerror="false"/>
        <delete dir="${install.dir}" failonerror="false"/>
        <!-- etics build system clean up -->
        <delete dir="RPMS" failonerror="false"/>
        <delete dir="tgz" failonerror="false"/>
        <delete dir="rpmbuild" failonerror="false"/>
    </target>

    <!-- download eternals dependencies in local repository -->
    <target name="repository" depends="init">
       <download-ext external="ext.bouncycastle" />
       <download-ext external="ext.commons-cli" />
       <download-ext external="ext.commons-codec" />
       <download-ext external="ext.commons-collections" />
       <download-ext external="ext.commons-configuration" />
       <download-ext external="ext.commons-httpclient" />
       <download-ext external="ext.commons-lang" />
       <download-ext external="ext.commons-logging" />
       <download-ext external="ext.jericho-html" />
       <download-ext external="ext.junit" />
       <download-ext external="ext.log4j" />
    </target>

</project>
